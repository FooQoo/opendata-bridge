fragment projectEntity on ProjectEntity {
  id
  attributes {
    title
    description
    resources {
      data {
        attributes {
          title
          url
        }
      }
    }
    prompt
    updatedAt
  }
}

query searchProject($query: String!) {
  search(query: $query) {
    projects(pagination: { page: 1, pageSize: 10 }) {
      data {
        ...projectEntity
      }
    }
  }
}

query getProject($id: ID) {
  project(id: $id) {
    data {
      ...projectEntity
    }
  }
}

query fetchProject {
  projects(pagination: { page: 1, pageSize: 10 }, sort: "updatedAt:desc") {
    data {
      ...projectEntity
    }
  }
}

# mutation create($input: PromptTemplateCreateInput!) {
#   createPromptTemplate(data: $input) {
#     ...promptTemplate
#   }
# }

# mutation update($id: ID, $input: PromptTemplateUpdateInput!) {
#   updatePromptTemplate(data: $input, where: { id: $id }) {
#     ...promptTemplate
#   }
# }

# mutation delete($id: ID) {
#   deletePromptTemplate(where: { id: $id }) {
#     id
#   }
# }

# mutation publish($id: ID) {
#   publishPromptTemplate(where: { id: $id }, to: PUBLISHED) {
#     ...promptTemplate
#   }
# }
